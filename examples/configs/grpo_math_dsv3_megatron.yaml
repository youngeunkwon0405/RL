# GRPO Algorithm Configuration
defaults: "grpo_math_1B_megatron.yaml"

grpo:
  num_prompts_per_step: 32
  num_generations_per_prompt: 16

policy:
  model_name: "/lustre/fsw/portfolios/coreai/users/yifuw/hf_checkpoints/dsv3/DeepSeek-V3-BF16"
  # model_name: "deepseek-ai/DeepSeek-V3.1"
  tokenizer:
    name: ${policy.model_name} ## specify if you'd like to use a tokenizer different from the model's default
  train_global_batch_size: 512
  train_micro_batch_size: 1
  generation_batch_size: 32 # Only used when generating using HF backend
  logprob_batch_size: 2
  max_total_sequence_length: 1536
  precision: "bfloat16"

  dtensor_cfg:
    enabled: false

  sequence_packing:
    enabled: False

  optimizer: null # remove default FSDP optimizer

  scheduler: null # remove default FSDP scheduler

  megatron_cfg:
    enabled: true
    empty_unused_memory_level: 1
    converter_type: "Qwen2ForCausalLM"
    tensor_model_parallel_size: 8
    pipeline_model_parallel_size: 16
    context_parallel_size: 1
    expert_tensor_parallel_size: 1
    expert_model_parallel_size: 16
    sequence_parallel: True
    pipeline_dtype: ${policy.precision}
    apply_rope_fusion: False

    optimizer:
      optimizer: "adam"
      lr: 3.0e-7
      min_lr: 3.0e-8
      weight_decay: 0.01
      bf16: true
      fp16: false
      params_dtype: "float32"

    scheduler:
      start_weight_decay: ${policy.megatron_cfg.optimizer.weight_decay}
      end_weight_decay: ${policy.megatron_cfg.optimizer.weight_decay}
      weight_decay_incr_style: "constant"
      lr_decay_style: "constant"
      lr_decay_iters: 1000
      lr_warmup_iters: 13
      lr_warmup_init: 3.0e-8

    env_vars:
      PYTORCH_CUDA_ALLOC_CONF: "expandable_segments:False"

  generation:
    backend: "vllm"
    max_new_tokens: ${policy.max_total_sequence_length}
    temperature: 1.0
    top_p: 1.0
    top_k: null
    stop_token_ids: null
    stop_strings: null
    vllm_cfg:
      tensor_parallel_size: 64
      expert_parallel_size: 1
      gpu_memory_utilization: 0.6
      enforce_eager: false
      max_model_len: ${policy.max_total_sequence_length}
    colocated:
      # true: generation shares training GPUs
      # false: uses dedicated generation resources
      enabled: false
      # only relevant when enabled is false
      resources:
        gpus_per_node: 8
        num_nodes: 16

cluster:
  gpus_per_node: 8
  num_nodes: 48
